{"version":3,"file":"html-screen-capture.min.js","sources":["../src/types.ts","../src/logger.ts","../src/encoder.ts","../src/capturer.ts","../src/index.ts"],"sourcesContent":["export enum OutputType {\r\n\tOBJECT = 'object',\r\n\tSTRING = 'string',\r\n}\r\nexport enum LogLevel {\r\n\tDEBUG = 'debug',\r\n\tINFO = 'info',\r\n\tWARN = 'warn',\r\n\tERROR = 'error',\r\n\tFATAL = 'fatal',\r\n\tOFF = 'off',\r\n}\r\nexport interface Options {\r\n\trulesToAddToDocStyle?: string[];\r\n\tcssSelectorsOfIgnoredElements: string[];\r\n\ttagsOfSkippedElementsForChildTreeCssHandling?: string[];\r\n\tattrKeyForSavingElementOrigClass?: string;\r\n\tattrKeyForSavingElementOrigStyle?: string;\r\n\tprefixForNewGeneratedClasses?: string;\r\n\tprefixForNewGeneratedPseudoClasses?: string;\r\n\timageFormatForDataUrl?: string;\r\n\timageQualityForDataUrl?: number;\r\n\tlogLevel?: LogLevel;\r\n}\r\nexport type CaptureOutput = HTMLElement | string | null;\r\nexport type CaptureFunction = (outputType?: OutputType, htmlDocument?: HTMLDocument, options?: Options) => CaptureOutput;\r\n","import { LogLevel } from './types';\r\n\r\nlet selectedLogLevel: LogLevel = LogLevel.WARN;\r\n\r\nconst setLogLevel = (levelName: LogLevel = LogLevel.WARN): void => {\r\n\tselectedLogLevel = levelName;\r\n};\r\nconst getLogLevel = (): LogLevel => {\r\n\treturn selectedLogLevel;\r\n};\r\nconst log = (msg: string, levelName: LogLevel): void => {\r\n\tconst logLevelNumbers = [LogLevel.DEBUG, LogLevel.INFO, LogLevel.WARN, LogLevel.ERROR, LogLevel.FATAL, LogLevel.OFF];\r\n\tif (logLevelNumbers.indexOf(levelName) >= logLevelNumbers.indexOf(selectedLogLevel)) {\r\n\t\tconsole.log('|html-screen-capture-js|' + levelName + '| ' + msg);\r\n\t}\r\n};\r\nconst isDebug = (): boolean => {\r\n\treturn selectedLogLevel === LogLevel.DEBUG;\r\n};\r\nconst debug = (msg: string): void => {\r\n\tlog(msg, LogLevel.DEBUG);\r\n};\r\nconst info = (msg: string): void => {\r\n\tlog(msg, LogLevel.INFO);\r\n};\r\nconst warn = (msg: string): void => {\r\n\tlog(msg, LogLevel.WARN);\r\n};\r\nconst error = (msg: string): void => {\r\n\tlog(msg, LogLevel.ERROR);\r\n};\r\nconst fatal = (msg: string): void => {\r\n\tlog(msg, LogLevel.FATAL);\r\n};\r\n\r\nexport const logger = {\r\n\tisDebug,\r\n\tsetLogLevel,\r\n\tgetLogLevel,\r\n\tdebug,\r\n\tinfo,\r\n\twarn,\r\n\terror,\r\n\tfatal,\r\n};\r\n","export const utf8Encode = (str: string): string => {\r\n\tconst target = str.replace(/\\r\\n/g, '\\n');\r\n\tlet utfText = '';\r\n\tfor (let n = 0; n < target.length; n++) {\r\n\t\tconst c = target.charCodeAt(n);\r\n\t\tif (c < 128) {\r\n\t\t\tutfText += String.fromCharCode(c);\r\n\t\t} else if (c > 127 && c < 2048) {\r\n\t\t\tutfText += String.fromCharCode((c >> 6) | 192);\r\n\t\t\tutfText += String.fromCharCode((c & 63) | 128);\r\n\t\t} else {\r\n\t\t\tutfText += String.fromCharCode((c >> 12) | 224);\r\n\t\t\tutfText += String.fromCharCode(((c >> 6) & 63) | 128);\r\n\t\t\tutfText += String.fromCharCode((c & 63) | 128);\r\n\t\t}\r\n\t}\r\n\treturn utfText;\r\n};\r\n\r\nexport const base64Encode = (str: string): string => {\r\n\tlet output = '';\r\n\tconst keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n\tlet chr1, chr2, chr3, enc1, enc2, enc3, enc4;\r\n\tlet i = 0;\r\n\tstr = utf8Encode(str);\r\n\twhile (i < str.length) {\r\n\t\tchr1 = str.charCodeAt(i++);\r\n\t\tchr2 = str.charCodeAt(i++);\r\n\t\tchr3 = str.charCodeAt(i++);\r\n\t\tenc1 = chr1 >> 2;\r\n\t\tenc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\r\n\t\tenc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\r\n\t\tenc4 = chr3 & 63;\r\n\t\tif (isNaN(chr2)) {\r\n\t\t\tenc3 = enc4 = 64;\r\n\t\t} else if (isNaN(chr3)) {\r\n\t\t\tenc4 = 64;\r\n\t\t}\r\n\t\toutput = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4);\r\n\t}\r\n\treturn output;\r\n};\r\n\r\nexport const uriEncode = (str: string): string => {\r\n\treturn (str ? encodeURI(str) : '') || '';\r\n};\r\n","import { CaptureFunction, LogLevel, OutputType } from './types';\r\nimport { logger } from './logger';\r\nimport { base64Encode, uriEncode } from './encoder';\r\n\r\ninterface CaptureContext {\r\n\tisBody: boolean;\r\n\tbaseClass: Map<string, string>;\r\n\tclassMap: Map<string, string>;\r\n\tclassCount: number;\r\n\tpseudoStyles: Array<string>;\r\n\tpseudoClassCount: number;\r\n\tshouldHandleImgDataUrl: boolean;\r\n\tcanvas: HTMLCanvasElement | null;\r\n\tdoc: HTMLDocument;\r\n\tignoredElms: Node[];\r\n\toptions: {\r\n\t\trulesToAddToDocStyle: string[];\r\n\t\tcssSelectorsOfIgnoredElements: string[];\r\n\t\tcomputedStyleKeyValuePairsOfIgnoredElements: object;\r\n\t\ttagsOfSkippedElementsForChildTreeCssHandling: string[];\r\n\t\tattrKeyForSavingElementOrigClass: string;\r\n\t\tattrKeyForSavingElementOrigStyle: string;\r\n\t\tprefixForNewGeneratedClasses: string;\r\n\t\tprefixForNewGeneratedPseudoClasses: string;\r\n\t\timageFormatForDataUrl: string;\r\n\t\timageQualityForDataUrl: number;\r\n\t\tlogLevel: LogLevel;\r\n\t};\r\n}\r\n\r\nconst getClassName = (domElm: Element): string => {\r\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n\tconst className: any = domElm.className;\r\n\tconst stringClass = className.toString() === '[object SVGAnimatedString]' ? className.baseVal : className;\r\n\treturn typeof stringClass === 'string' ? stringClass : '';\r\n};\r\n\r\nconst getClasses = (domElm: Element): string[] => {\r\n\tconst className = getClassName(domElm);\r\n\tconst classNames = className ? className.split(' ') : [];\r\n\treturn classNames.reduce((result: string[], c: string) => {\r\n\t\tif (c) {\r\n\t\t\tresult.push(c);\r\n\t\t}\r\n\t\treturn result;\r\n\t}, [] as string[]);\r\n};\r\n\r\nconst handleElmCss = (context: CaptureContext, domElm: Element, newElm: Element): void => {\r\n\tconst handleOrigClassAndStyle = (): void => {\r\n\t\tif (getClasses(newElm).length > 0) {\r\n\t\t\t//ZUNIT - commented out\r\n\t\t\t//newElm.setAttribute(context.options.attrKeyForSavingElementOrigClass, getClassName(newElm));\r\n\t\t\t//newElm.removeAttribute('class');\r\n\t\t}\r\n\t\tif (newElm.getAttribute('style')) {\r\n\t\t\t//ZUNIT - commented out\r\n\t\t\t// newElm.setAttribute(context.options.attrKeyForSavingElementOrigStyle, newElm.getAttribute('style') || '');\r\n\t\t\t// newElm.removeAttribute('style');\r\n\t\t}\r\n\t};\r\n\tconst handleRegularElmStyle = (): string => {\r\n\t\tlet classStr = `${context.options.prefixForNewGeneratedClasses}0 `;\r\n\t\tconst computedStyle = getComputedStyle(domElm);\r\n\t\tfor (let i = 0; i < computedStyle.length; i++) {\r\n\t\t\tconst property = computedStyle.item(i);\r\n\t\t\tconst value = computedStyle.getPropertyValue(property);\r\n\t\t\tif (value !== context.baseClass.get(property)) {\r\n\t\t\t\tconst mapKey = property + ':' + value;\r\n\t\t\t\tlet className: string = context.classMap.get(mapKey) || '';\r\n\t\t\t\tif (!className) {\r\n\t\t\t\t\tcontext.classCount++;\r\n\t\t\t\t\tclassName = `${context.options.prefixForNewGeneratedClasses}${context.classCount}`;\r\n\t\t\t\t\tcontext.classMap.set(mapKey, className);\r\n\t\t\t\t}\r\n\t\t\t\tclassStr += className + ' ';\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn classStr;\r\n\t};\r\n\tconst handlePseudoElmsStyle = (): string => {\r\n\t\tlet classStr = '';\r\n\t\tfor (const pseudoType of ['::before', '::after']) {\r\n\t\t\tconst computedStyle = getComputedStyle(domElm, pseudoType);\r\n\t\t\tif (!['none', 'normal'].includes(computedStyle.content)) {\r\n\t\t\t\tcontext.pseudoClassCount++;\r\n\t\t\t\tconst className = `${context.options.prefixForNewGeneratedPseudoClasses}${context.pseudoClassCount}`;\r\n\t\t\t\tclassStr += className + ' ';\r\n\t\t\t\tcontext.pseudoStyles.push(`.${className}${pseudoType}{`);\r\n\t\t\t\tfor (let i = 0; i < computedStyle.length; i++) {\r\n\t\t\t\t\tconst property = computedStyle.item(i);\r\n\t\t\t\t\tconst value = computedStyle.getPropertyValue(property);\r\n\t\t\t\t\tcontext.pseudoStyles.push(`${property}:${value};`);\r\n\t\t\t\t}\r\n\t\t\t\tcontext.pseudoStyles.push('}');\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn classStr;\r\n\t};\r\n\thandleOrigClassAndStyle();\r\n\tlet classStr = handleRegularElmStyle();\r\n\tclassStr += handlePseudoElmsStyle();\r\n\tnewElm.setAttribute('class', classStr.trim());\r\n};\r\n\r\nconst getCanvasDataUrl = (context: CaptureContext, domElm: HTMLImageElement | HTMLCanvasElement): string => {\r\n\tlet canvasDataUrl = '';\r\n\ttry {\r\n\t\tif (!context.canvas) {\r\n\t\t\tcontext.canvas = context.doc.createElement('canvas');\r\n\t\t}\r\n\t\tcontext.canvas.width = domElm instanceof HTMLImageElement ? domElm.naturalWidth : domElm.offsetWidth;\r\n\t\tcontext.canvas.height = domElm instanceof HTMLImageElement ? domElm.naturalHeight : domElm.offsetHeight;\r\n\t\tconst ctx = context.canvas.getContext('2d');\r\n\t\tif (ctx) {\r\n\t\t\tctx.drawImage(domElm, 0, 0);\r\n\t\t}\r\n\t\tcanvasDataUrl = context.canvas.toDataURL(context.options.imageFormatForDataUrl, context.options.imageQualityForDataUrl);\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n\t} catch (ex: any) {\r\n\t\tlogger.warn(`getCanvasDataUrl() - ${ex.message}`);\r\n\t}\r\n\treturn canvasDataUrl;\r\n};\r\n\r\nconst handleInputElement = (domElm: HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement, newElm: Element): void => {\r\n\tnewElm.setAttribute('value', domElm.value);\r\n\tconst domType = domElm.getAttribute('type');\r\n\tif (domElm instanceof HTMLInputElement && (domType === 'checkbox' || domType === 'radio')) {\r\n\t\tif (domElm.checked) {\r\n\t\t\t(newElm as HTMLInputElement).setAttribute('checked', 'checked');\r\n\t\t} else {\r\n\t\t\tnewElm.removeAttribute('checked');\r\n\t\t}\r\n\t} else if (domElm instanceof HTMLTextAreaElement && domElm.value) {\r\n\t\t(newElm as HTMLInputElement).innerText = domElm.value;\r\n\t} else if (domElm instanceof HTMLSelectElement && domElm.value && domElm.children) {\r\n\t\tfor (let i = domElm.children.length - 1; i >= 0; i--) {\r\n\t\t\tif (domElm.children[i].getAttribute('value') === domElm.value) {\r\n\t\t\t\tnewElm.children[i].setAttribute('selected', '');\r\n\t\t\t} else {\r\n\t\t\t\tnewElm.children[i].removeAttribute('selected');\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst handleImageElement = (context: CaptureContext, domElm: HTMLImageElement, newElm: Element): void => {\r\n\tif (context.shouldHandleImgDataUrl) {\r\n\t\tconst imgDataUrl = getCanvasDataUrl(context, domElm);\r\n\t\tif (imgDataUrl) {\r\n\t\t\tnewElm.setAttribute('src', imgDataUrl);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst handleCanvasElement = (context: CaptureContext, domElm: HTMLCanvasElement, newElm: Element): void => {\r\n\tconst canvasDataUrl = getCanvasDataUrl(context, domElm);\r\n\tif (canvasDataUrl) {\r\n\t\tnewElm.setAttribute('src', canvasDataUrl);\r\n\t}\r\n\tnewElm.outerHTML = newElm.outerHTML.replace(/<canvas/g, '<img');\r\n};\r\n\r\nconst shouldIgnoreElm = (context: CaptureContext, domElm: Element): boolean => {\r\n\tif (context.ignoredElms.includes(domElm)) {\r\n\t\treturn true;\r\n\t}\r\n\tconst computedStyleKeyValuePairsOfIgnoredElements = Object.entries(context.options.computedStyleKeyValuePairsOfIgnoredElements);\r\n\tif (context.isBody && computedStyleKeyValuePairsOfIgnoredElements.length > 0) {\r\n\t\tconst computedStyle = getComputedStyle(domElm);\r\n\t\tfor (const [k, v] of computedStyleKeyValuePairsOfIgnoredElements) {\r\n\t\t\tif (computedStyle.getPropertyValue(k) === v) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n\r\nconst recursiveWalk = (context: CaptureContext, domElm: Element, newElm: Element, handleCss: boolean): void => {\r\n\tif (context.isBody) {\r\n\t\tif (domElm instanceof HTMLInputElement || domElm instanceof HTMLTextAreaElement || domElm instanceof HTMLSelectElement) {\r\n\t\t\thandleInputElement(domElm, newElm);\r\n\t\t} else if (domElm instanceof HTMLImageElement) {\r\n\t\t\thandleImageElement(context, domElm, newElm);\r\n\t\t} else if (domElm instanceof HTMLCanvasElement) {\r\n\t\t\thandleCanvasElement(context, domElm, newElm);\r\n\t\t}\r\n\t}\r\n\tif (handleCss) {\r\n\t\thandleElmCss(context, domElm, newElm);\r\n\t\tif (context.options.tagsOfSkippedElementsForChildTreeCssHandling.includes(domElm.tagName.toLowerCase())) {\r\n\t\t\thandleCss = false;\r\n\t\t}\r\n\t}\r\n\tif (domElm.children) {\r\n\t\tfor (let i = domElm.children.length - 1; i >= 0; i--) {\r\n\t\t\tif (shouldIgnoreElm(context, domElm.children[i])) {\r\n\t\t\t\tnewElm.removeChild(newElm.children[i]);\r\n\t\t\t} else {\r\n\t\t\t\trecursiveWalk(context, domElm.children[i], newElm.children[i], handleCss);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst createBaseClass = (context: CaptureContext) => {\r\n\tconst dummyElm = context.doc.createElement('div');\r\n\tdummyElm.id = 'html-screen-capture-dummy-div';\r\n\tdummyElm.style['display'] = 'none';\r\n\tcontext.doc.body.appendChild(dummyElm);\r\n\tconst computedStyle = getComputedStyle(dummyElm);\r\n\tfor (let i = 0; i < computedStyle.length; i++) {\r\n\t\tconst property = computedStyle.item(i);\r\n\t\tconst value = computedStyle.getPropertyValue(property);\r\n\t\tcontext.baseClass.set(property, value);\r\n\t}\r\n\tcontext.baseClass.set('display', 'block');\r\n\tif (dummyElm.parentNode) {\r\n\t\tdummyElm.parentNode.removeChild(dummyElm);\r\n\t}\r\n};\r\n\r\nconst getIgnoredElms = (context: CaptureContext) => {\r\n\tif (!context.options.cssSelectorsOfIgnoredElements || !context.options.cssSelectorsOfIgnoredElements.length) {\r\n\t\treturn [];\r\n\t}\r\n\tconst ignoredElms: Node[] = [];\r\n\tcontext.options.cssSelectorsOfIgnoredElements.forEach(cssSelector => {\r\n\t\tconst elms = context.doc.documentElement.querySelectorAll(cssSelector);\r\n\t\telms.forEach(elm => {\r\n\t\t\tignoredElms.push(elm);\r\n\t\t});\r\n\t});\r\n\treturn ignoredElms;\r\n};\r\n\r\nconst getHtmlObject = (context: CaptureContext): HTMLElement => {\r\n\tcontext.ignoredElms = getIgnoredElms(context);\r\n\tconst createNewHtml = (): HTMLElement => {\r\n\t\tconst newHtml = context.doc.documentElement.cloneNode(false) as HTMLElement;\r\n\t\thandleElmCss(context, context.doc.documentElement, newHtml);\r\n\t\treturn newHtml;\r\n\t};\r\n\tconst appendNewHead = (newHtml: HTMLElement): void => {\r\n\t\tconst newHead = context.doc.head.cloneNode(true) as HTMLElement;\r\n\t\tcontext.isBody = false;\r\n\t\trecursiveWalk(context, context.doc.head, newHead, false);\r\n\t\tnewHtml.appendChild(newHead);\r\n\t};\r\n\tconst appendNewBody = (newHtml: HTMLElement): void => {\r\n\t\tcreateBaseClass(context);\r\n\t\tconst newBody = context.doc.body.cloneNode(true) as HTMLElement;\r\n\t\tcontext.isBody = true;\r\n\t\trecursiveWalk(context, context.doc.body, newBody, true);\r\n\t\tnewHtml.appendChild(newBody);\r\n\t};\r\n\tconst appendNewStyle = (newHtml: Element): void => {\r\n\t\tconst style = context.doc.createElement('style');\r\n\t\tlet cssText = `.${context.options.prefixForNewGeneratedClasses}0{`;\r\n\t\tcontext.baseClass.forEach((v, k) => {\r\n\t\t\tcssText += `${k}:${v};`;\r\n\t\t});\r\n\t\tcssText += '}';\r\n\t\tcontext.classMap.forEach((v, k) => {\r\n\t\t\tcssText += `.${v}{${k}}`;\r\n\t\t});\r\n\t\tcssText += context.pseudoStyles.join('');\r\n\t\tcssText += context.options.rulesToAddToDocStyle.join('');\r\n\t\tstyle.appendChild(context.doc.createTextNode(cssText));\r\n\t\t//ZUNIT - commented this out\r\n\t\t//newHtml.children[0].appendChild(style);\r\n\t};\r\n\tconst newHtml = createNewHtml();\r\n\tappendNewHead(newHtml);\r\n\tappendNewBody(newHtml);\r\n\tappendNewStyle(newHtml);\r\n\treturn newHtml;\r\n};\r\n\r\nconst prepareOutput = (newHtmlObject: HTMLElement, outputType: OutputType): string | HTMLElement => {\r\n\tlet output: string | HTMLElement | null = null;\r\n\tif (outputType === OutputType.OBJECT) {\r\n\t\toutput = newHtmlObject;\r\n\t} else {\r\n\t\tconst outerHtml = (newHtmlObject ? newHtmlObject.outerHTML : '') || '';\r\n\t\tif (outerHtml) {\r\n\t\t\tif (outputType === OutputType.STRING) {\r\n\t\t\t\toutput = outerHtml;\r\n\t\t\t} else if (outputType === 'uri') {\r\n\t\t\t\t//support for a deprecated value\r\n\t\t\t\toutput = uriEncode(outerHtml);\r\n\t\t\t} else if (outputType === 'base64') {\r\n\t\t\t\t//support for a deprecated value\r\n\t\t\t\toutput = base64Encode(outerHtml);\r\n\t\t\t}\r\n\t\t}\r\n\t\toutput = output || '';\r\n\t}\r\n\tif (logger.isDebug()) {\r\n\t\tlogger.debug(`output: ${output instanceof HTMLElement ? output.outerHTML : output}`);\r\n\t}\r\n\treturn output;\r\n};\r\n\r\nexport const goCapture: CaptureFunction = (outputType?, htmlDocument?, options?) => {\r\n\tconst startTime = new Date().getTime();\r\n\tlet output: string | HTMLElement | null = null;\r\n\tconst context: CaptureContext = {\r\n\t\tisBody: false,\r\n\t\tbaseClass: new Map<string, string>(),\r\n\t\tclassMap: new Map<string, string>(),\r\n\t\tclassCount: 0,\r\n\t\tpseudoStyles: [],\r\n\t\tpseudoClassCount: 0,\r\n\t\tshouldHandleImgDataUrl: true,\r\n\t\tcanvas: null,\r\n\t\tdoc: htmlDocument || document,\r\n\t\tignoredElms: [],\r\n\t\toptions: {\r\n\t\t\t...{\r\n\t\t\t\trulesToAddToDocStyle: [],\r\n\t\t\t\tcssSelectorsOfIgnoredElements: ['script', 'link', 'style'],\r\n\t\t\t\tcomputedStyleKeyValuePairsOfIgnoredElements: { display: 'none' },\r\n\t\t\t\ttagsOfSkippedElementsForChildTreeCssHandling: ['svg'],\r\n\t\t\t\tattrKeyForSavingElementOrigClass: '_class',\r\n\t\t\t\tattrKeyForSavingElementOrigStyle: '_style',\r\n\t\t\t\tprefixForNewGeneratedClasses: 'c',\r\n\t\t\t\tprefixForNewGeneratedPseudoClasses: 'p',\r\n\t\t\t\timageFormatForDataUrl: 'image/png',\r\n\t\t\t\timageQualityForDataUrl: 0.92,\r\n\t\t\t\tlogLevel: LogLevel.WARN,\r\n\t\t\t},\r\n\t\t\t...(options || {}),\r\n\t\t},\r\n\t};\r\n\ttry {\r\n\t\tlogger.setLogLevel(context.options.logLevel);\r\n\t\tconst newHtmlObject = getHtmlObject(context);\r\n\t\toutput = prepareOutput(newHtmlObject, outputType || OutputType.OBJECT);\r\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n\t} catch (ex: any) {\r\n\t\tlogger.error(`goCapture() - error - ${ex.message}`);\r\n\t} finally {\r\n\t\tlogger.info(`goCapture() - end - ${new Date().getTime() - startTime}ms`);\r\n\t}\r\n\treturn output;\r\n};\r\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport { OutputType, LogLevel, Options, CaptureOutput, CaptureFunction } from './types';\r\nimport { goCapture } from './capturer';\r\n\r\nexport { OutputType, LogLevel, Options, CaptureOutput, CaptureFunction } from './types';\r\nexport const capture: CaptureFunction = (outputType?, htmlDocument?, options?) => {\r\n\treturn goCapture(outputType, htmlDocument, options);\r\n};\r\n"],"names":["OutputType","LogLevel","selectedLogLevel","WARN","log","msg","levelName","logLevelNumbers","DEBUG","INFO","ERROR","FATAL","OFF","indexOf","console","logger","base64Encode","str","output","keyStr","chr1","chr2","chr3","enc1","enc2","enc3","enc4","i","target","replace","utfText","n","length","c","charCodeAt","String","fromCharCode","utf8Encode","isNaN","charAt","handleElmCss","context","domElm","newElm","className","stringClass","toString","baseVal","getClassName","split","reduce","result","push","getClasses","getAttribute","classStr","options","prefixForNewGeneratedClasses","computedStyle","getComputedStyle","property","item","value","getPropertyValue","baseClass","get","mapKey","classMap","classCount","set","handleRegularElmStyle","pseudoType","includes","content","pseudoClassCount","prefixForNewGeneratedPseudoClasses","pseudoStyles","handlePseudoElmsStyle","setAttribute","trim","getCanvasDataUrl","canvasDataUrl","canvas","doc","createElement","width","HTMLImageElement","naturalWidth","offsetWidth","height","naturalHeight","offsetHeight","ctx","getContext","drawImage","toDataURL","imageFormatForDataUrl","imageQualityForDataUrl","ex","message","shouldIgnoreElm","ignoredElms","computedStyleKeyValuePairsOfIgnoredElements","Object","entries","isBody","k","v","recursiveWalk","handleCss","HTMLInputElement","HTMLTextAreaElement","HTMLSelectElement","domType","checked","removeAttribute","innerText","children","handleInputElement","shouldHandleImgDataUrl","imgDataUrl","handleImageElement","HTMLCanvasElement","outerHTML","handleCanvasElement","tagsOfSkippedElementsForChildTreeCssHandling","tagName","toLowerCase","removeChild","getHtmlObject","cssSelectorsOfIgnoredElements","forEach","cssSelector","documentElement","querySelectorAll","elm","getIgnoredElms","newHtml","cloneNode","createNewHtml","newHead","head","appendChild","appendNewHead","dummyElm","id","style","body","parentNode","createBaseClass","newBody","appendNewBody","cssText","join","rulesToAddToDocStyle","createTextNode","appendNewStyle","prepareOutput","newHtmlObject","outputType","OBJECT","outerHtml","STRING","encodeURI","HTMLElement","htmlDocument","startTime","Date","getTime","Map","document","display","attrKeyForSavingElementOrigClass","attrKeyForSavingElementOrigStyle","logLevel","goCapture"],"mappings":"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"}